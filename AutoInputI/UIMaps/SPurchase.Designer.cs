// ------------------------------------------------------------------------------
//  <auto-generated>
//      此代码由编码的 UI 测试生成器生成。
//      版本: 14.0.0.0
//
//      如果重新生成代码，则更改此文件可能会导致错误的行为，
//      并将丢失这些更改。
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace AutoInputI.UIMaps.SPurchaseClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public partial class SPurchase
    {
        
        /// <summary>
        /// SPurchaseMethod - 使用“SPurchaseMethodParams”将参数传递到此方法中。
        /// </summary>
        public void SPurchaseMethod()
        {
            #region Variable Declarations
            WinMenuItem uI基金申购MenuItem = this.UI柜台销售系统Window.UI应用程序MenuBar.UI日常交易管理MenuItem.UI基金申购MenuItem;
            WinEdit accounttextbox = this.UI基金申购Window.UIItemWindow.accounttextbox;
            WinButton uIItemButton = this.UI基金申购Window.UIItemWindow1.UI基金申购Client.UIItemButton;
            WinEdit uIItemEdit = this.UI密码输入Window.UIItemWindow.UIItemEdit;
            WinEdit uIItemEdit1 = this.UI基金申购Window.UIItemWindow2.UIItemEdit;
            WinEdit uIItemEdit2 = this.UI基金选择Window.UIItemWindow.UIItemEdit;
            WinButton uI确定YButton = this.UI基金选择Window.UIItemWindow1.UI基金选择Client.UI确定YButton;
            WinComboBox uIItemComboBox = this.UI基金申购Window.UIItemWindow3.UIItemComboBox;
            WinComboBox uIItemComboBox1 = this.UI基金申购Window.UIItemWindow4.UIItemComboBox;
            WinEdit textedit1 = this.UI基金申购Window.UIItemWindow1.UI基金申购Client.textedit1;
            WinButton uI确定OButton = this.UI基金申购Window.UIItemWindow5.UI基金申购Client.UI确定OButton;
            WinButton uI是YButton = this.UI提示Window.UI是YWindow.UI是YButton;
            WinButton uI关闭CButton = this.UI返回信息Window.UIItemWindow.UI返回信息Client.UI关闭CButton;
            WinButton uI否NButton = this.UI提示Window.UI否NWindow.UI否NButton;
            WinButton uI关闭CButton1 = this.UI基金申购Window.UIItemWindow5.UI基金申购Client.UI关闭CButton;
            #endregion

            // 单击 “日常交易管理” -> “基金申购” 菜单项
            Mouse.Click(uI基金申购MenuItem, new Point(49, 14));

            // 在 文本框 中键入“0015”
            accounttextbox.Text = this.SPurchaseMethodParams.accounttextboxText;

            // 单击 “...” 按钮
            Mouse.Click(uIItemButton, new Point(10, 11));

            // 在 文本框 中键入“********”
            Keyboard.SendKeys(uIItemEdit, this.SPurchaseMethodParams.UIItemEditSendKeys, true);

            // 在 文本框 中键入“{Enter}”
            Keyboard.SendKeys(uIItemEdit1, this.SPurchaseMethodParams.UIItemEditSendKeys1, ModifierKeys.None);

            // 单击 “...” 按钮
            Mouse.Click(uIItemButton, new Point(10, 11));

            // 在 文本框 中键入“000084”
            uIItemEdit2.Text = this.SPurchaseMethodParams.UIItemEditText;

            // 单击 “确定&Y” 按钮
            Mouse.Click(uI确定YButton, new Point(32, 11));

            // 在 组合框 中选择“A”
            uIItemComboBox.SelectedItem = this.SPurchaseMethodParams.UIItemComboBoxSelectedItem;

            // 在 组合框 中选择“1”
            uIItemComboBox1.SelectedItem = this.SPurchaseMethodParams.UIItemComboBoxSelectedItem1;

            // 在 “博时安盈债券A” 文本框 中键入“1000”
            textedit1.Text = this.SPurchaseMethodParams.textedit1Text;

            // 单击 “确定&O” 按钮
            Mouse.Click(uI确定OButton, new Point(26, 13));

            // 单击 “是(&Y)” 按钮
            Mouse.Click(uI是YButton, new Point(49, 7));

            // 单击 “关闭&C” 按钮
            Mouse.Click(uI关闭CButton, new Point(43, 9));

            // 单击 “否(&N)” 按钮
            Mouse.Click(uI否NButton, new Point(61, 15));

            // 单击 “关闭&C” 按钮
            Mouse.Click(uI关闭CButton1, new Point(37, 20));

            //SPurchaseMethodParams.fundname = this.SPurchaseMethodParams.fundname;

        }
        
        #region Properties
        public virtual SPurchaseMethodParams SPurchaseMethodParams
        {
            get
            {
                if ((this.mSPurchaseMethodParams == null))
                {
                    this.mSPurchaseMethodParams = new SPurchaseMethodParams();
                }
                return this.mSPurchaseMethodParams;
            }
        }
        
        public UI柜台销售系统Window UI柜台销售系统Window
        {
            get
            {
                if ((this.mUI柜台销售系统Window == null))
                {
                    this.mUI柜台销售系统Window = new UI柜台销售系统Window();
                }
                return this.mUI柜台销售系统Window;
            }
        }
        
        public UI基金申购Window UI基金申购Window
        {
            get
            {
                if ((this.mUI基金申购Window == null))
                {
                    this.mUI基金申购Window = new UI基金申购Window();
                }
                return this.mUI基金申购Window;
            }
        }
        
        public UI密码输入Window UI密码输入Window
        {
            get
            {
                if ((this.mUI密码输入Window == null))
                {
                    this.mUI密码输入Window = new UI密码输入Window();
                }
                return this.mUI密码输入Window;
            }
        }
        
        public UI基金选择Window UI基金选择Window
        {
            get
            {
                if ((this.mUI基金选择Window == null))
                {
                    this.mUI基金选择Window = new UI基金选择Window();
                }
                return this.mUI基金选择Window;
            }
        }
        
        public UI提示Window UI提示Window
        {
            get
            {
                if ((this.mUI提示Window == null))
                {
                    this.mUI提示Window = new UI提示Window();
                }
                return this.mUI提示Window;
            }
        }
        
        public UI返回信息Window UI返回信息Window
        {
            get
            {
                if ((this.mUI返回信息Window == null))
                {
                    this.mUI返回信息Window = new UI返回信息Window();
                }
                return this.mUI返回信息Window;
            }
        }
        #endregion
        
        #region Fields
        private SPurchaseMethodParams mSPurchaseMethodParams;
        
        private UI柜台销售系统Window mUI柜台销售系统Window;
        
        private UI基金申购Window mUI基金申购Window;
        
        private UI密码输入Window mUI密码输入Window;
        
        private UI基金选择Window mUI基金选择Window;
        
        private UI提示Window mUI提示Window;
        
        private UI返回信息Window mUI返回信息Window;
        #endregion
    }
    
    /// <summary>
    /// 要传递到“SPurchaseMethod”中的参数
    /// </summary>
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public  class SPurchaseMethodParams
    {
        
        #region Fields
        /// <summary>
        /// 在 文本框 中键入“0015”
        /// </summary>
        public string accounttextboxText = "0015";
        
        /// <summary>
        /// 在 文本框 中键入“********”
        /// </summary>
        public string UIItemEditSendKeys = "Z835TI3Zgo9E3U/I+xdySeWoFGtRJwY4met/VPhL3eHxTL1xoGRE8/dYy6bBzzkF3OVzBgkFX7PrX99k+" +
            "Ckshmb0QCrsA+Pec7XZ46Rdq+Y=";
        
        /// <summary>
        /// 在 文本框 中键入“{Enter}”
        /// </summary>
        public string UIItemEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// 在 文本框 中键入“000084”
        /// </summary>
        public string UIItemEditText = "000084";
        
        /// <summary>
        /// 在 组合框 中选择“A”
        /// </summary>
        public string UIItemComboBoxSelectedItem = "A";
        
        /// <summary>
        /// 在 组合框 中选择“1”
        /// </summary>
        public string UIItemComboBoxSelectedItem1 = "1";
        
        /// <summary>
        /// 在 “博时安盈债券A” 文本框 中键入“1000”
        /// </summary>
        public string textedit1Text = "1000";

        public static string fundname;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UI柜台销售系统Window : WinWindow
    {
        
        public UI柜台销售系统Window()
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.Name] = "柜台销售系统";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMainForm";
            this.WindowTitles.Add("柜台销售系统");
            #endregion
        }
        
        #region Properties
        public UI应用程序MenuBar UI应用程序MenuBar
        {
            get
            {
                if ((this.mUI应用程序MenuBar == null))
                {
                    this.mUI应用程序MenuBar = new UI应用程序MenuBar(this);
                }
                return this.mUI应用程序MenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UI应用程序MenuBar mUI应用程序MenuBar;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UI应用程序MenuBar : WinMenuBar
    {
        
        public UI应用程序MenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinMenu.PropertyNames.Name] = "应用程序";
            this.WindowTitles.Add("柜台销售系统");
            #endregion
        }
        
        #region Properties
        public UI日常交易管理MenuItem UI日常交易管理MenuItem
        {
            get
            {
                if ((this.mUI日常交易管理MenuItem == null))
                {
                    this.mUI日常交易管理MenuItem = new UI日常交易管理MenuItem(this);
                }
                return this.mUI日常交易管理MenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UI日常交易管理MenuItem mUI日常交易管理MenuItem;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UI日常交易管理MenuItem : WinMenuItem
    {
        
        public UI日常交易管理MenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "日常交易管理";
            this.WindowTitles.Add("柜台销售系统");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UI基金申购MenuItem
        {
            get
            {
                if ((this.mUI基金申购MenuItem == null))
                {
                    this.mUI基金申购MenuItem = new WinMenuItem(this);
                    #region 搜索条件
                    this.mUI基金申购MenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "基金申购";
                    this.mUI基金申购MenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUI基金申购MenuItem.WindowTitles.Add("柜台销售系统");
                    #endregion
                }
                return this.mUI基金申购MenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUI基金申购MenuItem;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UI基金申购Window : WinWindow
    {
        
        public UI基金申购Window()
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.Name] = "基金申购";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TFrmAllot";
            this.WindowTitles.Add("基金申购");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow3 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow3(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIItemWindow4 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow4(this);
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIItemWindow5 UIItemWindow5
        {
            get
            {
                if ((this.mUIItemWindow5 == null))
                {
                    this.mUIItemWindow5 = new UIItemWindow5(this);
                }
                return this.mUIItemWindow5;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIItemWindow3 mUIItemWindow3;
        
        private UIItemWindow4 mUIItemWindow4;
        
        private UIItemWindow5 mUIItemWindow5;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "THsEdit";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "15";
            this.WindowTitles.Add("基金申购");
            #endregion
        }
        
        #region Properties
        public WinEdit accounttextbox
        {
            get
            {
                if ((this.maccounttextbox == null))
                {
                    this.maccounttextbox = new WinEdit(this);
                    #region 搜索条件
                    this.maccounttextbox.WindowTitles.Add("基金申购");
                    #endregion
                }
                return this.maccounttextbox;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit maccounttextbox;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TGroupBox";
            this.WindowTitles.Add("基金申购");
            #endregion
        }
        
        #region Properties
        public UI基金申购Client UI基金申购Client
        {
            get
            {
                if ((this.mUI基金申购Client == null))
                {
                    this.mUI基金申购Client = new UI基金申购Client(this);
                }
                return this.mUI基金申购Client;
            }
        }
        #endregion
        
        #region Fields
        private UI基金申购Client mUI基金申购Client;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UI基金申购Client : WinClient
    {
        
        public UI基金申购Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.WindowTitles.Add("基金申购");
            #endregion
        }
        
        #region Properties
        public WinButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WinButton(this);
                    #region 搜索条件
                    this.mUIItemButton.SearchProperties[WinButton.PropertyNames.Name] = "...";
                    this.mUIItemButton.WindowTitles.Add("基金申购");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        
        public WinEdit textedit1
        {


            get
            {
                if ((this.mtextedit1 == null))
                {
                    this.mtextedit1 = new WinEdit(this);
                    #region 搜索条件
                    // this.mtextedit1.SearchProperties.Remove(UITestControl.PropertyNames.Name);

                    //  this.mtextedit1.SearchProperties.Add(WinEdit.PropertyNames.Name, );
                    // this.mtextedit1.SearchProperties.Add(WinEdit.PropertyNames.Name, "博时天颐债券A类");

                    //   this.mtextedit1.SearchProperties[WinEdit.PropertyNames.Name] = "博时天颐债券A类";
                  //  SPurchaseMethodParams sp = new SPurchaseMethodParams();
                 //   Console.WriteLine(sp.fundname);
                    this.mtextedit1.SearchProperties[WinEdit.PropertyNames.Name] = SPurchaseMethodParams.fundname;
                    this.mtextedit1.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mtextedit1.SearchConfigurations.Remove(SearchConfiguration.VisibleOnly);
                    this.mtextedit1.WindowTitles.Add("基金申购");
                    #endregion
                }
                return this.mtextedit1;
            }
        }
        
        public WinText text1
        {
            get
            {
                if ((this.mtext1 == null))
                {
                    this.mtext1 = new WinText(this);
                    #region 搜索条件
                    this.mtext1.SearchProperties[WinText.PropertyNames.Name] = "博时安盈债券A";
                    this.mtext1.WindowTitles.Add("基金申购");
                    #endregion
                }
                return this.mtext1;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItemButton;
        
        private WinEdit mtextedit1;
        
        private WinText mtext1;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "THsEdit";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "14";
            this.WindowTitles.Add("基金申购");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.WindowTitles.Add("基金申购");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "THsComboBox";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("基金申购");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region 搜索条件
                    this.mUIItemComboBox.WindowTitles.Add("基金申购");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "THsComboBox";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("基金申购");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region 搜索条件
                    this.mUIItemComboBox.WindowTitles.Add("基金申购");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemWindow5 : WinWindow
    {
        
        public UIItemWindow5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.WindowTitles.Add("基金申购");
            #endregion
        }
        
        #region Properties
        public UI基金申购Client1 UI基金申购Client
        {
            get
            {
                if ((this.mUI基金申购Client == null))
                {
                    this.mUI基金申购Client = new UI基金申购Client1(this);
                }
                return this.mUI基金申购Client;
            }
        }
        #endregion
        
        #region Fields
        private UI基金申购Client1 mUI基金申购Client;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UI基金申购Client1 : WinClient
    {
        
        public UI基金申购Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.WindowTitles.Add("基金申购");
            #endregion
        }
        
        #region Properties
        public WinButton UI确定OButton
        {
            get
            {
                if ((this.mUI确定OButton == null))
                {
                    this.mUI确定OButton = new WinButton(this);
                    #region 搜索条件
                    this.mUI确定OButton.SearchProperties[WinButton.PropertyNames.Name] = "确定O";
                    this.mUI确定OButton.WindowTitles.Add("基金申购");
                    #endregion
                }
                return this.mUI确定OButton;
            }
        }
        
        public WinButton UI关闭CButton
        {
            get
            {
                if ((this.mUI关闭CButton == null))
                {
                    this.mUI关闭CButton = new WinButton(this);
                    #region 搜索条件
                    this.mUI关闭CButton.SearchProperties[WinButton.PropertyNames.Name] = "关闭C";
                    this.mUI关闭CButton.WindowTitles.Add("基金申购");
                    #endregion
                }
                return this.mUI关闭CButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUI确定OButton;
        
        private WinButton mUI关闭CButton;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UI密码输入Window : WinWindow
    {
        
        public UI密码输入Window()
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.Name] = "密码输入";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPasswordInputForm";
            this.WindowTitles.Add("密码输入");
            #endregion
        }
        
        #region Properties
        public UIItemWindow6 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow6(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow6 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemWindow6 : WinWindow
    {
        
        public UIItemWindow6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "THsEdit";
            this.WindowTitles.Add("密码输入");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.WindowTitles.Add("密码输入");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UI基金选择Window : WinWindow
    {
        
        public UI基金选择Window()
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.Name] = "基金选择";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TFrmSelectFund";
            this.WindowTitles.Add("基金选择");
            #endregion
        }
        
        #region Properties
        public UIItemWindow7 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow7(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow11 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow11(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow21 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow21(this);
                }
                return this.mUIItemWindow2;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow7 mUIItemWindow;
        
        private UIItemWindow11 mUIItemWindow1;
        
        private UIItemWindow21 mUIItemWindow2;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemWindow7 : WinWindow
    {
        
        public UIItemWindow7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "THsEdit";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("基金选择");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.WindowTitles.Add("基金选择");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("基金选择");
            #endregion
        }
        
        #region Properties
        public UI基金选择Client UI基金选择Client
        {
            get
            {
                if ((this.mUI基金选择Client == null))
                {
                    this.mUI基金选择Client = new UI基金选择Client(this);
                }
                return this.mUI基金选择Client;
            }
        }
        #endregion
        
        #region Fields
        private UI基金选择Client mUI基金选择Client;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UI基金选择Client : WinClient
    {
        
        public UI基金选择Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.WindowTitles.Add("基金选择");
            #endregion
        }
        
        #region Properties
        public WinButton UI确定YButton
        {
            get
            {
                if ((this.mUI确定YButton == null))
                {
                    this.mUI确定YButton = new WinButton(this);
                    #region 搜索条件
                    this.mUI确定YButton.SearchProperties[WinButton.PropertyNames.Name] = "确定Y";
                    this.mUI确定YButton.WindowTitles.Add("基金选择");
                    #endregion
                }
                return this.mUI确定YButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUI确定YButton;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemWindow21 : WinWindow
    {
        
        public UIItemWindow21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "THsEdit";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("基金选择");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.WindowTitles.Add("基金选择");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UI提示Window : WinWindow
    {
        
        public UI提示Window()
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.Name] = "提示";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("提示");
            #endregion
        }
        
        #region Properties
        public UI是YWindow UI是YWindow
        {
            get
            {
                if ((this.mUI是YWindow == null))
                {
                    this.mUI是YWindow = new UI是YWindow(this);
                }
                return this.mUI是YWindow;
            }
        }
        
        public UI否NWindow UI否NWindow
        {
            get
            {
                if ((this.mUI否NWindow == null))
                {
                    this.mUI否NWindow = new UI否NWindow(this);
                }
                return this.mUI否NWindow;
            }
        }
        #endregion
        
        #region Fields
        private UI是YWindow mUI是YWindow;
        
        private UI否NWindow mUI否NWindow;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UI是YWindow : WinWindow
    {
        
        public UI是YWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("提示");
            #endregion
        }
        
        #region Properties
        public WinButton UI是YButton
        {
            get
            {
                if ((this.mUI是YButton == null))
                {
                    this.mUI是YButton = new WinButton(this);
                    #region 搜索条件
                    this.mUI是YButton.SearchProperties[WinButton.PropertyNames.Name] = "是(Y)";
                    this.mUI是YButton.WindowTitles.Add("提示");
                    #endregion
                }
                return this.mUI是YButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUI是YButton;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UI否NWindow : WinWindow
    {
        
        public UI否NWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "7";
            this.WindowTitles.Add("提示");
            #endregion
        }
        
        #region Properties
        public WinButton UI否NButton
        {
            get
            {
                if ((this.mUI否NButton == null))
                {
                    this.mUI否NButton = new WinButton(this);
                    #region 搜索条件
                    this.mUI否NButton.SearchProperties[WinButton.PropertyNames.Name] = "否(N)";
                    this.mUI否NButton.WindowTitles.Add("提示");
                    #endregion
                }
                return this.mUI否NButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUI否NButton;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UI返回信息Window : WinWindow
    {
        
        public UI返回信息Window()
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.Name] = "返回信息";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TReturnInfoForm";
            this.WindowTitles.Add("返回信息");
            #endregion
        }
        
        #region Properties
        public UIItemWindow8 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow8(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow8 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemWindow8 : WinWindow
    {
        
        public UIItemWindow8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("返回信息");
            #endregion
        }
        
        #region Properties
        public UI返回信息Client UI返回信息Client
        {
            get
            {
                if ((this.mUI返回信息Client == null))
                {
                    this.mUI返回信息Client = new UI返回信息Client(this);
                }
                return this.mUI返回信息Client;
            }
        }
        #endregion
        
        #region Fields
        private UI返回信息Client mUI返回信息Client;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UI返回信息Client : WinClient
    {
        
        public UI返回信息Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.WindowTitles.Add("返回信息");
            #endregion
        }
        
        #region Properties
        public WinButton UI关闭CButton
        {
            get
            {
                if ((this.mUI关闭CButton == null))
                {
                    this.mUI关闭CButton = new WinButton(this);
                    #region 搜索条件
                    this.mUI关闭CButton.SearchProperties[WinButton.PropertyNames.Name] = "关闭C";
                    this.mUI关闭CButton.WindowTitles.Add("返回信息");
                    #endregion
                }
                return this.mUI关闭CButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUI关闭CButton;
        #endregion
    }
}
