// ------------------------------------------------------------------------------
//  <auto-generated>
//      此代码由编码的 UI 测试生成器生成。
//      版本: 14.0.0.0
//
//      如果重新生成代码，则更改此文件可能会导致错误的行为，
//      并将丢失这些更改。
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace AutoInputI.UIMaps.ConvertClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public partial class Convert
    {
        
        #region Properties
        public UI柜台销售系统Window UI柜台销售系统Window
        {
            get
            {
                if ((this.mUI柜台销售系统Window == null))
                {
                    this.mUI柜台销售系统Window = new UI柜台销售系统Window();
                }
                return this.mUI柜台销售系统Window;
            }
        }
        
        public UI基金转换Window UI基金转换Window
        {
            get
            {
                if ((this.mUI基金转换Window == null))
                {
                    this.mUI基金转换Window = new UI基金转换Window();
                }
                return this.mUI基金转换Window;
            }
        }
        
        public UI密码输入Window UI密码输入Window
        {
            get
            {
                if ((this.mUI密码输入Window == null))
                {
                    this.mUI密码输入Window = new UI密码输入Window();
                }
                return this.mUI密码输入Window;
            }
        }
        
        public UIItemWindow10 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow10();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UI提示Window UI提示Window
        {
            get
            {
                if ((this.mUI提示Window == null))
                {
                    this.mUI提示Window = new UI提示Window();
                }
                return this.mUI提示Window;
            }
        }
        
        public UI返回信息Window UI返回信息Window
        {
            get
            {
                if ((this.mUI返回信息Window == null))
                {
                    this.mUI返回信息Window = new UI返回信息Window();
                }
                return this.mUI返回信息Window;
            }
        }
        #endregion
        
        #region Fields
        private UI柜台销售系统Window mUI柜台销售系统Window;
        
        private UI基金转换Window mUI基金转换Window;
        
        private UI密码输入Window mUI密码输入Window;
        
        private UIItemWindow10 mUIItemWindow;
        
        private UI提示Window mUI提示Window;
        
        private UI返回信息Window mUI返回信息Window;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UI柜台销售系统Window : WinWindow
    {
        
        public UI柜台销售系统Window()
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.Name] = "柜台销售系统";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMainForm";
            this.WindowTitles.Add("柜台销售系统");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TTreeView";
            this.WindowTitles.Add("柜台销售系统");
            #endregion
        }
        
        #region Properties
        public UIItemTree UIItemTree
        {
            get
            {
                if ((this.mUIItemTree == null))
                {
                    this.mUIItemTree = new UIItemTree(this);
                }
                return this.mUIItemTree;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTree mUIItemTree;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemTree : WinTree
    {
        
        public UIItemTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.WindowTitles.Add("柜台销售系统");
            #endregion
        }
        
        #region Properties
        public UI日常交易管理TreeItem UI日常交易管理TreeItem
        {
            get
            {
                if ((this.mUI日常交易管理TreeItem == null))
                {
                    this.mUI日常交易管理TreeItem = new UI日常交易管理TreeItem(this);
                }
                return this.mUI日常交易管理TreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UI日常交易管理TreeItem mUI日常交易管理TreeItem;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UI日常交易管理TreeItem : WinTreeItem
    {
        
        public UI日常交易管理TreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "日常交易管理";
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("柜台销售系统");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UI基金转换TreeItem
        {
            get
            {
                if ((this.mUI基金转换TreeItem == null))
                {
                    this.mUI基金转换TreeItem = new WinTreeItem(this);
                    #region 搜索条件
                    this.mUI基金转换TreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "基金转换";
                    this.mUI基金转换TreeItem.SearchProperties["Value"] = "1";
                    this.mUI基金转换TreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUI基金转换TreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUI基金转换TreeItem.WindowTitles.Add("柜台销售系统");
                    #endregion
                }
                return this.mUI基金转换TreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUI基金转换TreeItem;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UI基金转换Window : WinWindow
    {
        
        public UI基金转换Window()
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.Name] = "基金转换";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TFrmConvert";
            this.WindowTitles.Add("基金转换");
            #endregion
        }
        
        #region Properties
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow11 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow11(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow3 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow3(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIItemWindow4 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow4(this);
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIItemWindow5 UIItemWindow5
        {
            get
            {
                if ((this.mUIItemWindow5 == null))
                {
                    this.mUIItemWindow5 = new UIItemWindow5(this);
                }
                return this.mUIItemWindow5;
            }
        }
        
        public UIItemWindow6 UIItemWindow6
        {
            get
            {
                if ((this.mUIItemWindow6 == null))
                {
                    this.mUIItemWindow6 = new UIItemWindow6(this);
                }
                return this.mUIItemWindow6;
            }
        }
        
        public UIItemWindow7 UIItemWindow7
        {
            get
            {
                if ((this.mUIItemWindow7 == null))
                {
                    this.mUIItemWindow7 = new UIItemWindow7(this);
                }
                return this.mUIItemWindow7;
            }
        }
        
        public UIItemWindow8 UIItemWindow8
        {
            get
            {
                if ((this.mUIItemWindow8 == null))
                {
                    this.mUIItemWindow8 = new UIItemWindow8(this);
                }
                return this.mUIItemWindow8;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow1 mUIItemWindow;
        
        private UIItemWindow11 mUIItemWindow1;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIItemWindow3 mUIItemWindow3;
        
        private UIItemWindow4 mUIItemWindow4;
        
        private UIItemWindow5 mUIItemWindow5;
        
        private UIItemWindow6 mUIItemWindow6;
        
        private UIItemWindow7 mUIItemWindow7;
        
        private UIItemWindow8 mUIItemWindow8;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "THsEdit";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("基金转换");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.WindowTitles.Add("基金转换");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "THsComboBox";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "7";
            this.WindowTitles.Add("基金转换");
            #endregion
        }
        
        #region Properties
        public UIItemComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new UIItemComboBox(this);
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private UIItemComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemComboBox : WinComboBox
    {
        
        public UIItemComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.WindowTitles.Add("基金转换");
            #endregion
        }
        
        #region Properties
        public WinButton UI打开Button
        {
            get
            {
                if ((this.mUI打开Button == null))
                {
                    this.mUI打开Button = new WinButton(this);
                    #region 搜索条件
                    this.mUI打开Button.SearchProperties[WinButton.PropertyNames.Name] = "打开";
                    this.mUI打开Button.WindowTitles.Add("基金转换");
                    #endregion
                }
                return this.mUI打开Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUI打开Button;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "THsComboBox";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "5";
            this.WindowTitles.Add("基金转换");
            #endregion
        }
        
        #region Properties
        public UIItemComboBox1 UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new UIItemComboBox1(this);
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private UIItemComboBox1 mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemComboBox1 : WinComboBox
    {
        
        public UIItemComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.WindowTitles.Add("基金转换");
            #endregion
        }
        
        #region Properties
        public WinButton UI打开Button
        {
            get
            {
                if ((this.mUI打开Button == null))
                {
                    this.mUI打开Button = new WinButton(this);
                    #region 搜索条件
                    this.mUI打开Button.SearchProperties[WinButton.PropertyNames.Name] = "打开";
                    this.mUI打开Button.WindowTitles.Add("基金转换");
                    #endregion
                }
                return this.mUI打开Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUI打开Button;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "THsComboBox";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("基金转换");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region 搜索条件
                    this.mUIItemComboBox.WindowTitles.Add("基金转换");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "THsEdit";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "13";
            this.WindowTitles.Add("基金转换");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.WindowTitles.Add("基金转换");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemWindow5 : WinWindow
    {
        
        public UIItemWindow5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "THsComboBox";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("基金转换");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region 搜索条件
                    this.mUIItemComboBox.WindowTitles.Add("基金转换");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemWindow6 : WinWindow
    {
        
        public UIItemWindow6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "THsComboBox";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("基金转换");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region 搜索条件
                    this.mUIItemComboBox.WindowTitles.Add("基金转换");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemWindow7 : WinWindow
    {
        
        public UIItemWindow7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "THsComboBox";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "6";
            this.WindowTitles.Add("基金转换");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region 搜索条件
                    this.mUIItemComboBox.WindowTitles.Add("基金转换");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemWindow8 : WinWindow
    {
        
        public UIItemWindow8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("基金转换");
            #endregion
        }
        
        #region Properties
        public UI基金转换Client UI基金转换Client
        {
            get
            {
                if ((this.mUI基金转换Client == null))
                {
                    this.mUI基金转换Client = new UI基金转换Client(this);
                }
                return this.mUI基金转换Client;
            }
        }
        #endregion
        
        #region Fields
        private UI基金转换Client mUI基金转换Client;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UI基金转换Client : WinClient
    {
        
        public UI基金转换Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.WindowTitles.Add("基金转换");
            #endregion
        }
        
        #region Properties
        public WinButton UI确定OButton
        {
            get
            {
                if ((this.mUI确定OButton == null))
                {
                    this.mUI确定OButton = new WinButton(this);
                    #region 搜索条件
                    this.mUI确定OButton.SearchProperties[WinButton.PropertyNames.Name] = "确定O";
                    this.mUI确定OButton.WindowTitles.Add("基金转换");
                    #endregion
                }
                return this.mUI确定OButton;
            }
        }
        
        public WinButton UI关闭CButton
        {
            get
            {
                if ((this.mUI关闭CButton == null))
                {
                    this.mUI关闭CButton = new WinButton(this);
                    #region 搜索条件
                    this.mUI关闭CButton.SearchProperties[WinButton.PropertyNames.Name] = "关闭C";
                    this.mUI关闭CButton.WindowTitles.Add("基金转换");
                    #endregion
                }
                return this.mUI关闭CButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUI确定OButton;
        
        private WinButton mUI关闭CButton;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UI密码输入Window : WinWindow
    {
        
        public UI密码输入Window()
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.Name] = "密码输入";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPasswordInputForm";
            this.WindowTitles.Add("密码输入");
            #endregion
        }
        
        #region Properties
        public UIItemWindow9 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow9(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow9 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemWindow9 : WinWindow
    {
        
        public UIItemWindow9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "THsEdit";
            this.WindowTitles.Add("密码输入");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.WindowTitles.Add("密码输入");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemWindow10 : WinWindow
    {
        
        public UIItemWindow10()
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "桌面";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIItemWindow12 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow12(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow12 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemWindow12 : WinWindow
    {
        
        public UIItemWindow12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "ComboLBox";
            #endregion
        }
        
        #region Properties
        public UIItemList UIItemList
        {
            get
            {
                if ((this.mUIItemList == null))
                {
                    this.mUIItemList = new UIItemList(this);
                }
                return this.mUIItemList;
            }
        }
        #endregion
        
        #region Fields
        private UIItemList mUIItemList;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemList : WinList
    {
        
        public UIItemList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
        }
        
        #region Properties

        public WinListItem UIItem000084ListItem
        {

            get
            {
                if ((this.mUIItem000084ListItem == null))
                {
                    this.mUIItem000084ListItem = new WinListItem(this);
                    #region 搜索条件
                    this.mUIItem000084ListItem.SearchProperties[WinListItem.PropertyNames.Name] = ConvertMethodParams.sfundcode;

                    #endregion
                }
                return this.mUIItem000084ListItem;
            }
        }
        
        public WinListItem UIItem000178ListItem
        {
            get
            {
                if ((this.mUIItem000178ListItem == null))
                {
                    this.mUIItem000178ListItem = new WinListItem(this);
                    #region 搜索条件
                    this.mUIItem000178ListItem.SearchProperties[WinListItem.PropertyNames.Name] = ConvertMethodParams.tfundcode;
                    #endregion
                }
                return this.mUIItem000178ListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIItem000084ListItem;
        
        private WinListItem mUIItem000178ListItem;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UI提示Window : WinWindow
    {
        
        public UI提示Window()
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.Name] = "提示";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("提示");
            #endregion
        }
        
        #region Properties
        public UI是YWindow UI是YWindow
        {
            get
            {
                if ((this.mUI是YWindow == null))
                {
                    this.mUI是YWindow = new UI是YWindow(this);
                }
                return this.mUI是YWindow;
            }
        }
        
        public UI否NWindow UI否NWindow
        {
            get
            {
                if ((this.mUI否NWindow == null))
                {
                    this.mUI否NWindow = new UI否NWindow(this);
                }
                return this.mUI否NWindow;
            }
        }
        #endregion
        
        #region Fields
        private UI是YWindow mUI是YWindow;
        
        private UI否NWindow mUI否NWindow;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UI是YWindow : WinWindow
    {
        
        public UI是YWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("提示");
            #endregion
        }
        
        #region Properties
        public WinButton UI是YButton
        {
            get
            {
                if ((this.mUI是YButton == null))
                {
                    this.mUI是YButton = new WinButton(this);
                    #region 搜索条件
                    this.mUI是YButton.SearchProperties[WinButton.PropertyNames.Name] = "是(Y)";
                    this.mUI是YButton.WindowTitles.Add("提示");
                    #endregion
                }
                return this.mUI是YButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUI是YButton;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UI否NWindow : WinWindow
    {
        
        public UI否NWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "7";
            this.WindowTitles.Add("提示");
            #endregion
        }
        
        #region Properties
        public WinButton UI否NButton
        {
            get
            {
                if ((this.mUI否NButton == null))
                {
                    this.mUI否NButton = new WinButton(this);
                    #region 搜索条件
                    this.mUI否NButton.SearchProperties[WinButton.PropertyNames.Name] = "否(N)";
                    this.mUI否NButton.WindowTitles.Add("提示");
                    #endregion
                }
                return this.mUI否NButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUI否NButton;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UI返回信息Window : WinWindow
    {
        
        public UI返回信息Window()
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.Name] = "返回信息";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TReturnInfoForm";
            this.WindowTitles.Add("返回信息");
            #endregion
        }
        
        #region Properties
        public UIItemWindow13 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow13(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow13 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UIItemWindow13 : WinWindow
    {
        
        public UIItemWindow13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("返回信息");
            #endregion
        }
        
        #region Properties
        public UI返回信息Client UI返回信息Client
        {
            get
            {
                if ((this.mUI返回信息Client == null))
                {
                    this.mUI返回信息Client = new UI返回信息Client(this);
                }
                return this.mUI返回信息Client;
            }
        }
        #endregion
        
        #region Fields
        private UI返回信息Client mUI返回信息Client;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "14.0.23107.0")]
    public class UI返回信息Client : WinClient
    {
        
        public UI返回信息Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.WindowTitles.Add("返回信息");
            #endregion
        }
        
        #region Properties
        public WinButton UI关闭CButton
        {
            get
            {
                if ((this.mUI关闭CButton == null))
                {
                    this.mUI关闭CButton = new WinButton(this);
                    #region 搜索条件
                    this.mUI关闭CButton.SearchProperties[WinButton.PropertyNames.Name] = "关闭C";
                    this.mUI关闭CButton.WindowTitles.Add("返回信息");
                    #endregion
                }
                return this.mUI关闭CButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUI关闭CButton;
        #endregion
    }
}
